[
["latent-variable-models.html", "Chapter 8 Latent Variable Models 8.1 Data 8.2 Models 8.3 Results", " Chapter 8 Latent Variable Models # Parallel processing settings plan(multisession(workers = parallel::detectCores(logical = FALSE))) 8.1 Data mtf &lt;- read_rds(&quot;data/mtf.rds&quot;) us &lt;- read_rds(&quot;data/us.rds&quot;) yrbs &lt;- read_rds(&quot;data/yrbs.rds&quot;) 8.2 Models fit &lt;- function(data, items, x, y, name, missing = &quot;ml&quot;) { # Center year data &lt;- mutate(data, Year = Year - 2017) # Contrast code sex data &lt;- mutate(data, Sex = ifelse(Sex==&quot;Male&quot;, -0.5, 0.5)) # Drop rows with missing predictor data &lt;- drop_na(data, all_of(x)) # Drop rows where all outcome items are missing data &lt;- drop_na(data, all_of(y)) # Mean-center predictors data &lt;- data %&gt;% mutate( across( all_of(x), ~as.numeric(scale(., center = TRUE, scale = FALSE)) ) ) # Ordered? if (name==&quot;YRBS&quot;) { data &lt;- mutate(data, across(sad_lonely:suicide_3, ordered)) missing = &quot;listwise&quot; } # Create interaction terms because lavaan doesn&#39;t know how to newdata &lt;- model.matrix( as.formula(str_glue(&quot;{y} ~ Sex * Year * {x}&quot;)), data = data )[,-1] %&gt;% # Take out the intercept column because it causes lavaan to break as.data.frame() # Interaction term breaks lavaan so change to dot names(newdata) &lt;- str_replace_all(names(newdata), &quot;:&quot;, &quot;.&quot;) # return(newdata) newdata &lt;- cbind(data[,items], newdata) # Combine names of items to a string for lavaan model items_all &lt;- paste0(items, collapse = &quot; + &quot;) # Model strings sem0 &lt;- str_glue(&quot;{y} =~ {items_all}\\n{y} ~ Sex + Year + Sex.Year&quot;) sem1 &lt;- str_glue(&quot;{y} =~ {items_all}\\n{y} ~ Sex + Year + {x} + Sex.Year + Sex.{x} + Year.{x} + Sex.Year.{x}&quot;) ml0 &lt;- sem(sem0, data = newdata, missing = missing) ml1 &lt;- sem(sem1, data = newdata, missing = missing) tibble( data = name, Technology = x, Outcome = y, ml0 = list(ml0), ml1 = list(ml1) ) } x1 %&lt;-% fit(yrbs, c(&quot;sad_lonely&quot;, paste0(&quot;suicide_&quot;, 1:3)), &quot;TV&quot;, &quot;Suicide&quot;, &quot;YRBS&quot;) x2 %&lt;-% fit(yrbs, c(&quot;sad_lonely&quot;, paste0(&quot;suicide_&quot;, 1:3)), &quot;DV&quot;, &quot;Suicide&quot;, &quot;YRBS&quot;) x3 %&lt;-% fit(mtf, paste0(&quot;D_B_&quot;, 1:6), &quot;TV&quot;, &quot;Depression&quot;, &quot;MTF&quot;) x4 %&lt;-% fit(mtf, paste0(&quot;D_B_&quot;, 1:6), &quot;SM&quot;, &quot;Depression&quot;, &quot;MTF&quot;) sdq_con &lt;- c(&quot;sdqe&quot;, &quot;sdqg&quot;, &quot;sdql&quot;, &quot;sdqr&quot;, &quot;sdqv&quot;) sdq_emo &lt;- c(&quot;sdqc&quot;, &quot;sdqh&quot;, &quot;sdqm&quot;, &quot;sdqp&quot;, &quot;sdqx&quot;) x5 %&lt;-% fit(us, sdq_con, &quot;TV&quot;, &quot;Conduct&quot;, &quot;US&quot;) x6 %&lt;-% fit(us, sdq_con, &quot;SM&quot;, &quot;Conduct&quot;, &quot;US&quot;) x7 %&lt;-% fit(us, sdq_emo, &quot;TV&quot;, &quot;Emotion&quot;, &quot;US&quot;) x8 %&lt;-% fit(us, sdq_emo, &quot;SM&quot;, &quot;Emotion&quot;, &quot;US&quot;) # Rename variables fits &lt;- bind_rows(x1,x2,x3,x4,x5,x6,x7,x8) fits &lt;- fits %&gt;% mutate( Technology = ifelse( Technology %in% c(&quot;SM&quot;, &quot;DV&quot;), &quot;Social media / device&quot;, &quot;Television&quot; ) ) %&gt;% arrange(Outcome, Technology) 8.3 Results coefs &lt;- fits %&gt;% mutate(p = map(ml1, ~tidy(., conf.int = TRUE))) %&gt;% unnest(p) %&gt;% filter(op == &quot;~&quot;) %&gt;% separate(term, c(&quot;lhs&quot;, &quot;rhs&quot;), sep = &quot; ~ &quot;) %&gt;% mutate(N = map_dbl(ml1, nobs)) %&gt;% mutate(N = scales::comma(N, accuracy = 1)) coefs %&gt;% mutate(Parameter = str_replace(rhs, &quot;SM|DV|TV&quot;, &quot;Technology&quot;)) %&gt;% mutate(Parameter = str_replace_all(Parameter, &quot;\\\\.&quot;, &quot;:&quot;)) %&gt;% mutate(Parameter = fct_inorder(Parameter)) %&gt;% mutate(Outcome = fct_rev(Outcome)) %&gt;% ggplot(aes(estimate, Outcome, shape = Technology, fill = p.value &lt; 0.05)) + scale_shape_manual(values = c(21, 22)) + scale_fill_manual(values = c(&quot;white&quot;, &quot;black&quot;), guide = FALSE) + scale_x_continuous( &quot;Parameter estimate&quot;, breaks = scales::pretty_breaks(), expand = expansion(.25) ) + geom_vline(xintercept = 0, lty = 2, size = .25) + geom_linerangeh( aes(xmin = conf.low, xmax = conf.high), size = .25, position = position_dodge2v(.4), show.legend = FALSE ) + geom_point( size = 2, position = position_dodge2v(.4), ) + # geom_text( # aes(label = N), size = 2, vjust = 2, # position = position_dodge2v(.4) # ) + facet_wrap(&quot;Parameter&quot;, scales = &quot;free_x&quot;, nrow = 2) + theme( legend.position = c(.875, .25), axis.title.y = element_blank(), panel.spacing.x = unit(12, &quot;pt&quot;) ) # Numbers coefs %&gt;% mutate(coef = str_glue(&quot;{lhs} {op} {rhs}&quot;)) %&gt;% select(data:Outcome, coef, estimate:conf.high) coefs %&gt;% distinct(data, Technology, Outcome, N) Just time fits %&gt;% mutate(p = map(ml0, ~tidy(., conf.int = TRUE))) %&gt;% unnest(p) %&gt;% filter(op == &quot;~&quot;) %&gt;% separate(term, c(&quot;lhs&quot;, &quot;rhs&quot;), sep = &quot; ~ &quot;) %&gt;% # mutate( # Parameter = factor(rhs, levels = c(&quot;Year&quot;, &quot;Technology&quot;, &quot;Year x Technology&quot;)) # ) %&gt;% mutate(Outcome = fct_rev(Outcome)) %&gt;% ggplot(aes(estimate, Outcome, shape = Technology, fill = p.value &lt; 0.05)) + scale_shape_manual(values = c(21, 22)) + scale_fill_manual(values = c(&quot;white&quot;, &quot;black&quot;), guide = FALSE) + scale_x_continuous( &quot;Parameter estimate&quot;, breaks = scales::pretty_breaks(), expand = expansion(.25) ) + geom_vline(xintercept = 0, lty = 2, size = .25) + geom_linerangeh( aes(xmin = conf.low, xmax = conf.high), size = .25, position = position_dodge2v(.4), show.legend = FALSE ) + geom_point( size = 2, position = position_dodge2v(.4), ) + facet_wrap(&quot;rhs&quot;, scales = &quot;free_x&quot;, nrow = 1) + theme( legend.position = &quot;bottom&quot;, axis.title.y = element_blank(), panel.spacing.x = unit(12, &quot;pt&quot;) ) options(width = 120) library(sessioninfo) session_info() ## ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── ## setting value ## version R version 4.0.2 (2020-06-22) ## os macOS Catalina 10.15.7 ## system x86_64, darwin17.0 ## ui X11 ## language (EN) ## collate en_GB.UTF-8 ## ctype en_GB.UTF-8 ## tz Europe/London ## date 2020-10-02 ## ## ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── ## package * version date lib source ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.0.0) ## backports 1.1.10 2020-09-15 [1] CRAN (R 4.0.2) ## blob 1.2.1 2020-01-20 [1] CRAN (R 4.0.0) ## bookdown 0.20 2020-06-23 [1] CRAN (R 4.0.2) ## broom * 0.7.0.9001 2020-07-23 [1] Github (tidymodels/broom@7db1139) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.0.0) ## cli 2.0.2 2020-02-28 [1] CRAN (R 4.0.0) ## codetools 0.2-16 2018-12-24 [1] CRAN (R 4.0.2) ## colorspace 1.4-1 2019-03-18 [1] CRAN (R 4.0.0) ## crayon 1.3.4 2017-09-16 [1] CRAN (R 4.0.0) ## DBI 1.1.0 2019-12-15 [1] CRAN (R 4.0.0) ## dbplyr 1.4.4 2020-05-27 [1] CRAN (R 4.0.0) ## digest 0.6.25 2020-02-23 [1] CRAN (R 4.0.0) ## dplyr * 1.0.2 2020-08-18 [1] CRAN (R 4.0.2) ## ellipsis 0.3.1 2020-05-15 [1] CRAN (R 4.0.0) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.0.0) ## fansi 0.4.1 2020-01-08 [1] CRAN (R 4.0.0) ## farver 2.0.3 2020-01-16 [1] CRAN (R 4.0.0) ## forcats * 0.5.0 2020-03-01 [1] CRAN (R 4.0.0) ## fs 1.5.0 2020-07-31 [1] CRAN (R 4.0.2) ## future * 1.19.1 2020-09-22 [1] CRAN (R 4.0.2) ## generics 0.0.2 2018-11-29 [1] CRAN (R 4.0.0) ## ggplot2 * 3.3.2 2020-06-19 [1] CRAN (R 4.0.1) ## ggstance * 0.3.4 2020-04-02 [1] CRAN (R 4.0.0) ## globals 0.13.0 2020-09-17 [1] CRAN (R 4.0.2) ## glue 1.4.2 2020-08-27 [1] CRAN (R 4.0.2) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.0.0) ## haven 2.3.1 2020-06-01 [1] CRAN (R 4.0.0) ## hms 0.5.3 2020-01-08 [1] CRAN (R 4.0.0) ## htmltools 0.5.0 2020-06-16 [1] CRAN (R 4.0.1) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.0.2) ## jsonlite 1.7.1 2020-09-07 [1] CRAN (R 4.0.2) ## knitr * 1.30 2020-09-22 [1] CRAN (R 4.0.2) ## lavaan * 0.6-7 2020-07-31 [1] CRAN (R 4.0.2) ## lifecycle 0.2.0 2020-03-06 [1] CRAN (R 4.0.0) ## listenv 0.8.0 2019-12-05 [1] CRAN (R 4.0.0) ## lubridate 1.7.9 2020-06-08 [1] CRAN (R 4.0.1) ## magrittr 1.5 2014-11-22 [1] CRAN (R 4.0.0) ## mnormt 2.0.2 2020-09-01 [1] CRAN (R 4.0.2) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.0.0) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.0.0) ## pacman 0.5.1 2019-03-11 [1] CRAN (R 4.0.0) ## pbivnorm 0.6.0 2015-01-23 [1] CRAN (R 4.0.0) ## pillar 1.4.6 2020-07-10 [1] CRAN (R 4.0.2) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.0.0) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.0.0) ## R6 2.4.1 2019-11-12 [1] CRAN (R 4.0.0) ## Rcpp 1.0.5 2020-07-06 [1] CRAN (R 4.0.2) ## readr * 1.3.1 2018-12-21 [1] CRAN (R 4.0.0) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.0.0) ## reprex 0.3.0 2019-05-16 [1] CRAN (R 4.0.0) ## rlang 0.4.7 2020-07-09 [1] CRAN (R 4.0.2) ## rmarkdown 2.4.0 2020-09-11 [1] Github (cpsievert/rmarkdown@b79fb4d) ## rstudioapi 0.11 2020-02-07 [1] CRAN (R 4.0.0) ## rvest 0.3.6 2020-07-25 [1] CRAN (R 4.0.2) ## scales 1.1.1 2020-05-11 [1] CRAN (R 4.0.0) ## sessioninfo * 1.1.1 2018-11-05 [1] CRAN (R 4.0.0) ## stringi 1.5.3 2020-09-09 [1] CRAN (R 4.0.2) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.0.0) ## tibble * 3.0.3 2020-07-10 [1] CRAN (R 4.0.2) ## tidyr * 1.1.2 2020-08-27 [1] CRAN (R 4.0.2) ## tidyselect 1.1.0 2020-05-11 [1] CRAN (R 4.0.0) ## tidyverse * 1.3.0 2019-11-21 [1] CRAN (R 4.0.0) ## tmvnsim 1.0-2 2016-12-15 [1] CRAN (R 4.0.0) ## vctrs 0.3.4 2020-08-29 [1] CRAN (R 4.0.2) ## withr 2.3.0 2020-09-22 [1] CRAN (R 4.0.2) ## xfun 0.18 2020-09-29 [1] CRAN (R 4.0.2) ## xml2 1.3.2 2020-04-23 [1] CRAN (R 4.0.0) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.0.0) ## ## [1] /Library/Frameworks/R.framework/Versions/4.0/Resources/library "]
]
